package main

import "net/http"

templ CommonHeader() {
	<meta charset="utf-8"/>
	<meta name="description" content="Zhteuern"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<meta name="color-scheme" content="dark"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta http-equiv="Cache-control" content="public"/>
	<meta name="view-transition" content="same-origin"/>
	if environment != EnvironmentDEV {
		<link rel="icon" type="image/png" href={ hashBrotliFaviconPng }/>
		<script type="module" src={ hashBrotliZhteuernJs } defer></script>
		<link rel="stylesheet" href={ hashBrotliStyleCss }/>
		<link rel="stylesheet" href={ hashBrotliPicoBlueCss }/>
	} else {
		<link rel="icon" type="image/png" href={ BrotliFaviconPng }/>
		<script type="module" src={ BrotliZhteuernJs } defer></script>
		<link rel="stylesheet" href={ BrotliStyleCss }/>
		<link rel="stylesheet" href={ BrotliPicoBlueCss }/>
		// <link rel="stylesheet" href={ BrotliCtCss }/>
	}
}

templ HotReload() {
	{{ isDev := environment == EnvironmentDEV }}
	if isDev {
		<div id="hot-reload" init-fetch="/hot" method={ http.MethodPatch } retry="10"></div>
	}
}

templ ViewIndex() {
	<!DOCTYPE html>
	<html lang="en" data-theme="dark">
		<head>
			<title>Zhteuern</title>
			@CommonHeader()
		</head>
		<body>
			@HotReload()
			<main id="main" class="container fluid active">
				<section>
					<h2>Zhteuern</h2>
					<article>
						If you see a letter (example <kbd>s</kbd>): you can press the key on your keyboard instead of mouse clicking
					</article>
					<article>
						Canton Zurich only. No personal information is being stored.
						<br/>
						Here the source code if you want to verify or adapt for a different canton
						<a
							key-down="q"
							href="https://github.com/Jiang-Gianni/zhteuern"
							target="_blank"
						><b>link</b> <kbd>q</kbd></a>
					</article>
					<article>
						<b>This website may contain wrong information.</b>
						<br/>
						Please refer to the official documentation at:
						<li>
							<a
								key-down="w"
								href="https://www.zh.ch/de/steuern-finanzen/steuern/steuern-natuerliche-personen/steuererklaerung-natuerliche-personen.html"
								target="_blank"
							>
								<b>https://www.zh.ch/de/steuern-finanzen/steuern/steuern-natuerliche-personen/steuererklaerung-natuerliche-personen.html</b> <kbd>w</kbd>
							</a>
						</li>
						<li>
							<a
								key-down="f"
								href="https://www.zh.ch/de/steuern-finanzen/steuern/quellensteuer/quellensteuer-tarife.html"
								target="_blank"
							>
								<b>https://www.zh.ch/de/steuern-finanzen/steuern/quellensteuer/quellensteuer-tarife.html</b> <kbd>f</kbd>
							</a>
						</li>
						<li>
							<a
								key-down="p"
								href="https://www.estv.admin.ch/estv/en/home/fta/tax-statistics/calculate-taxes.html"
								target="_blank"
							>
								<b>https://www.estv.admin.ch/estv/en/home/fta/tax-statistics/calculate-taxes.html</b> <kbd>p</kbd>
							</a>
						</li>
					</article>
					<article>
						If you have multiple browser pages opened on the same tax simulation: any update on a browser <del>will</del> should be synced to the other browser pages as well.
						<br/>
					</article>
					<article>
						This website may not work properly on Firefox or mobile
					</article>
				</section>
				<form action="/" method={ http.MethodPost } target="_blank">
					<button key-down="s" type="submit" role="button">
						Start Tax Simulation
						<kbd>s</kbd>
					</button>
				</form>
			</main>
		</body>
	</html>
}

templ BackToHomeButton() {
	<a href="/" role="button" key-down="t" autofocus>Back to home <kbd>t</kbd></a>
}

templ ViewPageNotFound() {
	<!DOCTYPE html>
	<html lang="en" data-theme="dark">
		<head>
			<title>Page Not Found</title>
			@CommonHeader()
		</head>
		<body data-theme="dark">
			<main id="main" class="container fluid active">
				<section>
					<h1>Page not found</h1>
					<card>The page you're looking for doesn't exist.</card>
					<br/>
					<card>Sorry. Well, not really ¯\_(ツ)_/¯</card>
				</section>
				@BackToHomeButton()
			</main>
		</body>
	</html>
}

templ ViewInternalError() {
	<!DOCTYPE html>
	<html lang="en" data-theme="dark">
		<head>
			<title>Internal Error</title>
			@CommonHeader()
		</head>
		<body data-theme="dark">
			<main id="main" class="container fluid active">
				<section>
					<h1>Internal Error</h1>
					<card>An internal error happened.</card>
					<br/>
					<card>Sorry. Well, not really ¯\_(ツ)_/¯</card>
				</section>
				@BackToHomeButton()
			</main>
		</body>
	</html>
}

type inputNumericParams struct {
	ID      string
	keyDown string
}

templ InputNumeric(i *inputNumericParams) {
	<input
		id={ i.ID }
		name={ i.ID }
		key-down={ i.keyDown }
		pattern="\d*"
		inputmode="numeric"
		type="number"
	/>
}

type wrapPageParams struct {
	name string
}

templ WrapPage(w *wrapPageParams) {
	<section class={ page } name={ w.name } input-fetch={ WindowLocationPathname } method={ http.MethodPost }>
		<input name={ page } value={ w.name } hidden/>
		{ children... }
	</section>
}
